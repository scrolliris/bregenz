stages:
  - check
  - build
  - test
  - coverage
  - codequality

check27:
  stage: check
  image: python:2.7.14
  variables:
    ENV: development
    PIP_CACHE_DIR: pip-cache
  before_script:
    - pip install --upgrade pip setuptools
    - python --version
    - pip --version
    - pip install flake8 flake8-docstrings -c constraints.txt
    - make clean
  script:
    - make check
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - pip-cache
  except:
    - tags

check:
  stage: check
  image: python:3.5.4
  variables:
    ENV: test
    PIP_CACHE_DIR: pip-cache
  before_script:
    - pip install --upgrade pip setuptools
    - python --version
    - pip --version
    - pip install flake8 flake8-docstrings -c constraints.txt
    - make clean
  script:
    - make check
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - pip-cache
  except:
    - tags

build:
  stage: build
  image: node:8.9.0
  variables:
    NODE_ENV: production
  before_script:
    - node --version
    - npm --version
    - npm install --global gulp-cli
    - npm install --ignore-scripts
  script:
    - make build
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - node_modules
  artifacts:
    untracked: true
    paths:
      - static
  except:
    - tags

test27:
  stage: test
  image: python:2.7.14
  variables:
    ENV: test
    PIP_CACHE_DIR: pip-cache
  before_script:
    - pip install --upgrade pip setuptools
    - python --version
    - pip --version
    - make setup
  script:
    - make test
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - pip-cache
  except:
    - tags

test:
  stage: test
  image: python:3.5.4
  variables:
    ENV: test
    PIP_CACHE_DIR: pip-cache
  before_script:
    - pip install --upgrade pip setuptools
    - python --version
    - pip --version
    - make setup
  script:
    - make test
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - pip-cache
  except:
    - tags

coverage:
  stage: coverage
  image: python:3.5.4
  variables:
    ENV: test
    PIP_CACHE_DIR: pip-cache
  before_script:
    - pip install --upgrade pip setuptools
    - python --version
    - pip --version
    - make setup
  script:
    - make coverage
  cache:
    untracked: true
    # per branch
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - pip-cache
  artifacts:
    untracked: true
    paths:
      - .coverage
  except:
    - tags

codequality:
  stage: codequality
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  before_script:
    # 0.70.1 fails
    - docker pull codeclimate/codeclimate:0.70.0
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate validate-config
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate engines:install
  script:
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate analyze -f json > codequality.json
  artifacts:
    paths:
      - codequality.json
